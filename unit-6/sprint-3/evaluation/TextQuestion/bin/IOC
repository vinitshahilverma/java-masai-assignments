Q1/- What do you mean by the IOC, explain the life cycle of the Spring Bean.

Answer:- IOC is the inversion Control Method.
           
          when the class depends on another class than the dependent class creates the object of its
          dependency class directly, and the user call its mehtod, it is called the dependency object
          created int the main control.
          
          if some external entity is creating the dependency object then we say that control is inverted
          to some external enitity, this is called Inversion of Control.
          
         Life-cycle of a spring bean has 5 stages:
         1. Does not exist
         2. Instantiated
         3. Initialized
         4. Service
         5. Destroy
         
         
         1. Does not exist phase:
         Initially a spring bean object does not exist, if the bean object is in singleton scope then bean is instantiated by
         container at the time of loading the xml file.
      
         
         2. Instantiation phase:
         Spring container loads the spring bean class into the memory and creates the bean class object.
         after that then bean class object is created. spring container uses DI to populate the bean fields
         (properties/variables)All the dependencies will be resolved for a spring bean before its instantiation is finished.
         
         3. Initialization phase:
         
         If inside the spring bean class any user-defined init-method is configured , spring container will call that
         method.
         
         4. Service phase:
            spring container provides the bean object reference to the caller, then caller can call its business method
            on that bean object.

         5. Destruction phase:
            Upon the container shutdown spring container will call user-defined destroy() method if it is configured, just before bean 
            instance is garbage collected.